name: Docker Image CI

on:
  push:
    branches:
      - site/release/*
      - config/release/*
      - batch/release/*
env:
  SERVICE: $(echo ${{ github.ref_name }} | cut -f1 -d'/')
  VERSION: $(echo ${{ github.ref_name }} | cut -f3 -d'/')

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          architecture: x64
      - uses: docker/login-action@v3.2.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_KEY }}

      - name: Decode and set .env.local
        run: echo "${{ secrets.NEXTJS_ENV }}" | base64 --decode > ./client/.env.local

      - name: Decode and set application.yml
        run: echo "${{ secrets.SITE_TEST_CONFIG }}" | base64 --decode > ./server/src/main/resources/application.yml

      - name: Next.js install
        run: npm install --prefix ./client

      - name: Build the Next.js
        run: npm run build --prefix ./client

      - name: Build the Docker image
        run: ./build.sh ${{ env.SERVICE }} ${{ env.VERSION }} ${{ secrets.DOCKER_ID }} ${{ secrets.BASE_ID }}

      - name: Compress test report
        run: cd ./server/build/reports/tests && tar -czvf anamensis-server-test-report.tar.gz ./test && cp anamensis-server-test-report.tar.gz ../../../../anamensis-server-test-report.tar.gz

      - name: Upload Springboot - test report
        uses: actions/upload-artifact@v4
        with:
          name: anamensis-server-test-report.tar.gz
          path: anamensis-server-test-report.tar.gz

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Wait
        run: sleep 30
      - name: Write SSH key
        run: echo "${{ secrets.ANAMENSIS_SSH_KEY }}" > anamensis.pem && chmod 600 anamensis.pem

      - name: Docker deploy
        run: |
          ssh -o StrictHostKeyChecking=no -i anamensis.pem ${{ secrets.AWS_EC2_INSTANCE }} << 'EOF'
          cd ./aws-anamensis 
          sudo ./deploy.sh ${{ env.SERVICE }} ${{ env.VERSION }} ${{ secrets.EC2_INSTANCE_PORT }} ${{ secrets.BASE_ID }}
          EOF
      - name: Clean up
        run: rm -rf anamensis.pem


