<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.anamensis.server.mapper.BoardMapper">
    <insert id="save" parameterType="Board">
        <selectKey keyProperty="id" resultType="long" order="AFTER">
            SELECT last_insert_id()
        </selectKey>
        INSERT INTO board
               (category_pk, title, content,
                rate, view_count, create_at,
                member_pk, isAdsense, update_at,
                is_public, members_only)
        VALUES (#{categoryPk}, #{title}, #{content, typeHandler=JsonObjectTypeHandler},
                #{rate}, #{viewCount}, #{createAt},
                #{memberPk}, #{isAdsense}, #{updateAt}, #{isPublic}, #{membersOnly})
    </insert>

    <select id="findList" resultMap="BoardResultMapBoardList">
        SELECT *
             , b.id AS board_pk
             , (SELECT IFNULL((
                    SELECT count
                      FROM board_comment_count bcc
                     WHERE bcc.board_pk  = b.id)
                , 0)
             ) AS comment_count
             , (SELECT m.name
                  FROM member m
                 WHERE b.member_pk = m.id
             ) AS writer
             , (SELECT concat(f.file_path, f.file_name)
                  FROM file f
                 WHERE f.table_ref_pk  = b.member_pk
                   AND f.table_code_pk = (SELECT tc.id
                                            FROM table_code tc
                                           WHERE tc.table_name = 'member')
                   AND f.is_use        = 1
             ) AS profile
          FROM board b
          JOIN (SELECT b1.id
                  FROM  board b1
                    <if test="params != null and params.type != null and params.type == 'content' and params.value != null and params.value != ''">
                        JOIN board_index bi
                          ON bi.board_id = b1.id
                         AND bi.content REGEXP REGEXP_REPLACE(TRIM(#{params.value}), '\\s+', '|')
                    </if>
                    <if test="params != null and params.isFavorite">
                        JOIN board_favorite bf
                          ON bf.board_pk = b1.id
                         AND bf.member_pk = #{member.id}
                   </if>
                 WHERE 1 = 1
                   AND b1.is_use    = 1
                   AND b1.is_public = 1
                    <if test="params != null and params.categoryPk != 0">
                        AND b1.category_pk = #{params.categoryPk}
                    </if>
                    <if test="params != null and params.isFavorite">
                        AND b1.is_blocked = 0
                    </if>
                 ORDER BY b1.id DESC
                 LIMIT #{page.offset}, #{page.size}
         ) b3 ON b3.id = b.id
    </select>
    <select id="findIsSelf" resultMap="BoardResultMapBoardList">
        SELECT *
             , b.id AS board_pk
             , (SELECT IFNULL((SELECT count
                                 FROM board_comment_count bcc
                                WHERE bcc.board_pk  = b.id)
                     , 0)
             ) AS comment_count
             , m.name AS writer
             , concat(f.file_path, f.file_name) AS profile
         FROM board b
         JOIN (SELECT b1.id
                 FROM board b1
                <if test="params != null and params.type != null and params.type == 'content' and params.value != null and params.value != ''">
                 JOIN board_index bi
                   ON bi.board_id = b1.id
                  AND bi.content REGEXP REGEXP_REPLACE(TRIM(#{params.value}), '\\s+', '|')
                </if>
                WHERE 1 = 1
                  AND b1.member_pk = #{member.id}
                <if test="params != null and params.categoryPk != 0">
                  AND b1.category_pk = #{params.categoryPk}
                </if>
                  AND b1.is_use = 1
                ORDER BY b1.id DESC
                LIMIT #{page.offset}, #{page.size}
            ) b3
           ON b3.id = b.id
         JOIN member m
           ON m.id  = b.member_pk
         JOIN file f
           ON f.table_ref_pk  = b.member_pk
          AND f.table_code_pk = (SELECT tc.id
                                   FROM table_code tc
                                  WHERE tc.table_name = 'member')
         AND f.is_use = 1;
    </select>

    <select id="findByPk" resultMap="BoardResultMapBoard" parameterType="Long">
        SELECT *
             , m.create_at as member_create_at
          FROM board b
          JOIN member m
            ON m.id = b.member_pk
          LEFT OUTER JOIN file f
            ON f.table_ref_pk = m.id
           AND f.is_use        = 1
           AND f.table_code_pk = (SELECT t.id
                                    FROM table_code t
                                   WHERE t.table_name = 'member')
         WHERE b.is_use        = 1
           AND b.id            = #{boardPk}
    </select>
    <select id="findByMemberPk" resultMap="BoardResultMapBoard">
        SELECT *
             , id as board_pk
          FROM board
         WHERE member_pk = #{memberPk}
           AND is_use    = 1
         ORDER BY id DESC
         LIMIT #{page.offset}, #{page.size}
    </select>
    <select id="findNotice" resultMap="BoardResultMapBoardNotice">
        SELECT *
             , b.id AS board_pk
             , (SELECT m.name
                  FROM member m
                 WHERE m.id  = b.member_pk
             ) AS writer
          FROM board b
         WHERE b.category_pk = 1
           AND b.is_public   = 1
           AND b.is_use      = 1
         ORDER BY b.id DESC
         LIMIT 3
    </select>
    <update id="updateByPk" parameterType="Board">
        UPDATE board
        <set>
            <if test="categoryPk > 0">
                category_pk = #{categoryPk},
            </if>
            <if test="title != null and title != ''">
                title       = #{title},
            </if>
            <if test="content != null and content != ''">
                content     = #{content, typeHandler=JsonObjectTypeHandler},
            </if>
            <if test="isPublic != null">
                is_public    = #{isPublic},
            </if>
            <if test="membersOnly != null">
                members_only = #{membersOnly},
            </if>
                update_at   = #{updateAt}
        </set>
         WHERE id           = #{id}
           AND is_use       = 1
           AND member_pk    = #{memberPk}
    </update>
    <update id="disableByPk" parameterType="Map">
        UPDATE board
           SET is_use    = 0
           AND update_at = #{updateAt}
         WHERE id        = #{boardPk}
           AND is_use    = 1
           AND member_pk = #{memberPk}
    </update>
    <update id="viewUpdateByPk" parameterType="Long">
        UPDATE board
           SET view_count = view_count + 1
         WHERE id         = #{boardPk}
           AND is_use     = 1
    </update>

    <update id="updateIsBlockedByPk">
        UPDATE board
           SET is_blocked = #{isBlocked}
         WHERE id         = #{boardPk}
           AND is_use     = 1
    </update>

    <resultMap id="BoardResultMapBoardNotice" type="com.anamensis.server.resultMap.BoardResultMap$Notice">
        <id property="id" column="board_pk"/>
        <result property="writer" column="writer"/>
        <association property="board" resultMap="BoardEntity" />
    </resultMap>


    <resultMap id="BoardResultMapBoardList" type="com.anamensis.server.resultMap.BoardResultMap$List">
        <result property="id" column="board_pk"/>
        <result property="commentCount" column="comment_count"/>
        <result property="writer" column="writer"/>
        <result property="profile" column="profile"/>
        <association property="board" resultMap="BoardEntity" />
    </resultMap>


    <resultMap id="BoardResultMapBoard" type="com.anamensis.server.resultMap.BoardResultMap$Board">
        <id property="id" column="id"/>
        <result property="commentCount" column="comment_count"/>
        <association property="board" resultMap="BoardEntity" />
        <association property="member" resultMap="MemberEntity" />
        <association property="file" resultMap="FileEntity" />
    </resultMap>

    <resultMap id="BoardEntity" type="Board" autoMapping="true">
        <id property="id" column="board_pk"/>
        <result property="content" column="content" typeHandler="JsonObjectTypeHandler"/>
    </resultMap>
    <resultMap id="MemberEntity" type="Member" autoMapping="true">
        <id property="id" column="member_pk"/>
        <result property="createAt" column="member_create_at" />
    </resultMap>
    <resultMap id="FileEntity" type="File" autoMapping="true">
        <id property="id" column="file_pk"/>
    </resultMap>

    <resultMap id="BoardResultMap" type="Board">
        <result property="content" column="content" typeHandler="JsonObjectTypeHandler"/>
    </resultMap>
</mapper>